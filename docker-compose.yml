version: "3.1"

services:
    influxdb:
        container_name: $INFLUXDB_DOCKER_CONTAINER_NAME
        image: influxdb:2.1.1-alpine
        volumes:
            - influxdb-data:/var/lib/influxdb
            - ./influxdb/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro

        env_file:
            - ./.env
        environment:
            INFLUXDB_META_DIR: /var/lib/influxdb/meta

            INFLUXDB_DATA_DIR: /var/lib/influxdb/data
            INFLUXDB_DATA_WAL_DIR: /var/lib/influxdb/data
            INFLUXDB_DATA_MAX_SERIES_PER_DATABASE: 0
            INFLUXDB_DATA_MAX_VALUES_PER_TAG: 0
            INFLUXDB_DATA_SERIES_ID_SET_CACHE_SIZE: 100
            
            INFLUXDB_HTTP_BIND_ADDRES: :${INFLUXDB_PORT}
            INFLUXDB_HTTP_ENABLED: "true"
            INFLUXDB_HTTP_AUTH_ENABLED: "true"

            INFLUXDB_DB: ${INFLUXDB_DB}
            INFLUXDB_ADMIN_USER: ${INFLUXDB_ADMIN_USER}
            INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}

            DOCKER_INFLUXDB_INIT_MODE: "setup"
            DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_ADMIN_USER}
            DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
            DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_INIT_ORG}
            DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_INIT_BUCKET}
        networks:
            - monitoring
        restart: always
        labels:
            - "traefik.http.routers.influxdb-ssl.entryPoints=influxdb-port"
            - "traefik.http.routers.influxdb-ssl.rule=host(`$MONITORING_DOMAIN`)"
            - "traefik.http.routers.influxdb-ssl.tls=true"
            - "traefik.http.routers.influxdb-ssl.tls.certResolver=lets-encrypt-ssl"
            - "traefik.http.routers.influxdb-ssl.service=influxdb-ssl"
            - "traefik.http.services.influxdb-ssl.loadBalancer.server.port=$INFLUXDB_PORT"

    grafana:
        container_name: $GRAFANA_DOCKER_CONTAINER_NAME
        image: grafana/grafana:8.2.3
        volumes:
            - grafana-data:/var/lib/grafana
            - ./grafana/provisioning:/etc/grafana/provisioning:ro
        env_file:
            - ./.env
        environment:
            GF_PATHS_DATA: /var/lib/grafana
            GF_PATHS_PLUGINS: /var/lib/grafana/plugins
            GF_PATHS_PROVISIONING: /etc/grafana/provisioning
            
            GF_SERVER_HTTP_PORT: 3000
            GF_SERVER_MONITORING_DOMAIN: ${MONITORING_DOMAIN}
            GF_SERVER_ROOT_URL: https://${MONITORING_DOMAIN}

            GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER}
            GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD}

            GF_LOG_MODE: console

            # Variables for setting up the InfluxDB data source
            INFLUXDB_DB: ${INFLUXDB_DB}
            INFLUXDB_ADMIN_USER: ${INFLUXDB_ADMIN_USER}
            INFLUXDB_ADMIN_PASSWORD: ${INFLUXDB_ADMIN_PASSWORD}
        networks:
            - monitoring
        restart: always
        depends_on:
            - $INFLUXDB_DOCKER_CONTAINER_NAME
        labels:
            # Router for redirecting HTTP traffic to the router receiving HTTPS traffic.
            - "traefik.http.routers.grafana.entryPoints=port80"
            - "traefik.http.routers.grafana.rule=host(`$MONITORING_DOMAIN`)"
            - "traefik.http.routers.grafana.middlewares=grafana-redirect"
            - "traefik.http.middlewares.grafana-redirect.redirectScheme.scheme=https"
            - "traefik.http.middlewares.grafana-redirect.redirectScheme.permanent=true"

            - "traefik.http.routers.grafana-ssl.entryPoints=port443"
            - "traefik.http.routers.grafana-ssl.rule=host(`$MONITORING_DOMAIN`)"
            - "traefik.http.routers.grafana-ssl.tls=true"
            - "traefik.http.routers.grafana-ssl.tls.certResolver=lets-encrypt-ssl"
            - "traefik.http.routers.grafana-ssl.service=grafana-ssl"
            - "traefik.http.services.grafana-ssl.loadBalancer.server.port=3000"

    traefik:
        container_name: traefik
        image: traefik:v2.5.4
        volumes:
            - traefik-data:/letsencrypt
            - /var/run/docker.sock:/var/run/docker.sock:ro
        networks:
            - monitoring
        restart: always
        ports:
            - "80:80"
            - "443:443"
            - "$INFLUXDB_PORT:$INFLUXDB_PORT"
        command:
            - "--providers.docker=true"

            - "--entryPoints.port443.address=:443"
            - "--entryPoints.port80.address=:80"
            - "--entryPoints.influxdb-port.address=:$INFLUXDB_PORT"
            
            - "--certificatesResolvers.lets-encrypt-ssl.acme.tlsChallenge=true"
            - "--certificatesResolvers.lets-encrypt-ssl.acme.storage=/letsencrypt/acme.json"
            - "--certificatesresolvers.lets-encrypt-ssl.acme.caServer=${CA_SERVER}"
            - "--certificatesResolvers.lets-encrypt-ssl.acme.email=${LETS_ENCRYPT_EMAIL}"

networks:
    monitoring:
        driver: bridge

volumes:
    influxdb-data:
        external: false

    grafana-data:
        external: false

    traefik-data:
        external: false
